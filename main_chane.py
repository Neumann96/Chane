from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram import types, executor, Dispatcher, Bot
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import CHANE_keyboard as ck
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
import SQLite as sq
import datetime
import random

proxy_url = 'http://proxy.server:3128'
storage = MemoryStorage()
bot = Bot('6015314056:AAFtEgUyx897yl9QWnc2dlJyT06KMD83iZ8')
dp = Dispatcher(bot=bot, storage=storage)
a = False
sum = 0
sum_vivod = 0
num_cart = 0
ID = ''


class ProfileState(StatesGroup):
    number = State()
    sogl_1 = State()
    sogl_2 = State()
    get_id = State()
    admin = State()
    admin_get = State()
    pay = State()
    vivod = State()
    vivod_cart = State()
    admin_vivod = State()


def check_sub(chat_member):
    if chat_member['status'] == 'member' or chat_member['status'] == 'administrator':
        return True
    else:
        return False


@dp.message_handler(commands=['start'], state='*')
async def cmd_start(message: types.Message, state: FSMContext):
    if sq.check(message.from_user.id):
        await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—é –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞‚¨áÔ∏è',
                             reply_markup=ck.get_kb_join())
        await state.finish()
    else:
        await bot.send_message(chat_id=message.from_user.id,
                               text=ck.hello_message,
                               parse_mode='HTML',
                               reply_markup=ck.get_ikb_sogl())
        await ProfileState.number.set()


@dp.message_handler(commands=['admin'], state='*') # —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞
async def admin(message: types.Message):
    if message.from_user.id == 6171444954 or message.from_user.id == 1006103801:
        await message.answer(text='–¢—ã –≤ —Ä–µ–∂–∏–º–µ –∞–¥–º–∏–Ω–∞\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ‚¨áÔ∏è',
                             reply_markup=ck.get_kb_menu_admin())
    await ProfileState.admin.set()


@dp.message_handler(Text(equals='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ü–õ–ê–¢–ï–ñ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'), state=ProfileState.admin)
async def join_user(message: types.Message):
    if message.from_user.id == 6171444954 or message.from_user.id == 1006103801:
        await message.answer('–í–≤–µ–¥–∏ ID —á–µ–ª–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å')
    await ProfileState.admin_get.set()


@dp.message_handler(state=ProfileState.admin_get)
async def get_user(message: types.Message, state: FSMContext):
    await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω!')
    global sum
    a = sq.user_ref(int(message.text))
    profit = sq.user_money_profit(a)
    profit = int(profit) + 180
    sq.set_profit(int(a), profit)
    sq.set_balance(int(message.text), 300)
    b = int(sq.user_money_unlock(message.text))
    c = int(sq.user_money_unlock(int(a)))
    b += 90
    c += 180
    sq.set_unlock(int(message.text), b)
    sq.set_unlock(int(a), c)
    sq.set_chane_money(int(message.text), 30 + (float(sum) - 300))
    await bot.send_message(chat_id=int(message.text),
                           text=f'<b>–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ‚òëÔ∏è</b>\n'
                                f'C—É–º–º–∞: 300‚ÇΩ',
                           parse_mode='HTML')
    await bot.send_message(chat_id=int(a),
                           text=f'–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª: <code>{message.text}</code> –ø–æ–ø–æ–ª–Ω–∏–ª —Å—á–µ—Ç!üí∏',
                           parse_mode='HTML')
    await state.finish()


@dp.message_handler(Text(equals='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –í–´–í–û–î –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'), state=ProfileState.admin)
async def vivod_user(message: types.Message):
    if message.from_user.id == 6171444954 or message.from_user.id == 1006103801:
        await message.answer('–í–≤–µ–¥–∏ ID —á–µ–ª–∞')
    await ProfileState.admin_vivod.set()


@dp.message_handler(state=ProfileState.admin_vivod)
async def get_user(message: types.Message, state: FSMContext):
    await message.answer('–í—ã–≤–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!')
    global sum_vivod
    balance = sq.user_money_balance(int(message.text))
    unlock = sq.user_money_unlock(int(message.text))
    unlock -= int(sum_vivod)
    sq.set_unlock(int(message.text), unlock)
    await bot.send_message(chat_id=int(message.text),
                           text=f'<b>–£—Å–ø–µ—à–Ω—ã–π –≤—ã–≤–æ–¥‚òëÔ∏è</b>\n'
                                f'C—É–º–º–∞: {sum_vivod}‚ÇΩ',
                           parse_mode='HTML')

    await state.finish()


@dp.callback_query_handler(state=ProfileState.number) # –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
async def give_phone_number(callback: types.CallbackQuery):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±", request_contact=True))
    await callback.message.answer("–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç:", reply_markup=keyboard)
    await ProfileState.sogl_1.set()


@dp.message_handler(content_types=types.ContentType.CONTACT, state=ProfileState.sogl_1)
async def contacts(msg: types.Message):
    await msg.answer(f"–¢–≤–æ–π –Ω–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω: {msg.contact.phone_number}", reply_markup=types.ReplyKeyboardRemove())
    await sq.add(msg.from_user.id, msg.from_user.username, msg.contact.phone_number)
    if check_sub(await bot.get_chat_member(chat_id='@chane_enter', user_id=msg.from_user.id)):
        await msg.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª –≤–∞—Å –≤ —Å–∏—Å—Ç–µ–º—É!\n'
                         '–ï—Å–ª–∏ —É –≤–∞—Å –µ–≥–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–Ω–µ—Ç"')
        await ProfileState.get_id.set()
    else:
        await bot.send_message(chat_id=msg.from_user.id,
                               text='–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É, –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å –Ω–∞ –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª!',
                               reply_markup=ck.get_ikb_sub())


@dp.callback_query_handler(state=ProfileState.sogl_1)
async def give_phone_number(callback: types.CallbackQuery):
    if callback.data == 'sub' and check_sub(await callback.bot.get_chat_member(chat_id='@chane_enter', user_id=callback.from_user.id)):
        await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª –≤–∞—Å –≤ —Å–∏—Å—Ç–µ–º—É!\n'
                                      '–ï—Å–ª–∏ —É –≤–∞—Å –µ–≥–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–Ω–µ—Ç"')
        await ProfileState.get_id.set()
    else:
        await callback.message.answer(text='–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É, –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å –Ω–∞ –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª!',
                                      reply_markup=ck.get_ikb_sub())


@dp.message_handler(state=ProfileState.get_id)
async def get_id(message: types.Message, state: FSMContext):
    if message.text != '–Ω–µ—Ç':
        a = message.text
        if sq.check(a) and int(message.from_user.id) != int(a):
            sq.add_ref(int(message.from_user.id), int(a))
            await message.answer('–£—Å–ø–µ—à–Ω–æ!', reply_markup=ck.get_kb_join())
            await bot.send_message(chat_id=int(message.text),
                                   text=f'–ü–æ –≤–∞—à–µ–º—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID: <code>{message.from_user.id}</code>',
                                   parse_mode='HTML')
            await state.finish()
        else:
            await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID')
            await ProfileState.get_id.set()
    else:
        sq.add_ref(int(message.from_user.id), 1891715370)
        await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—é –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞‚¨áÔ∏è',
                             reply_markup=ck.get_kb_join())
        await state.finish()


@dp.callback_query_handler(lambda callback: callback.data == 'up')
async def top_up(callback: types.CallbackQuery):
    global sum
    await callback.message.delete()
    a = random.random()
    a = str("%.1f" % a)
    b = random.randint(305, 315)
    sum = str(b) + a[1:]
    await callback.message.answer(text=f'–î–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:\n\n'
                                       f'üí≥–°—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã:\nhttps://yoomoney.ru/to/4100117042524058\n(–¢–∏–Ω—å–∫–æ—Ñ—Ñ/–°–±–µ—Ä–±–∞–Ω–∫/Qiwi)\n\nüíµ–°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞: {sum}‚ÇΩ\n\n'
                                       f'<b>–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞:</b>\n1) –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏. (–ü–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ)\n'
                                       f'2) –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É\n"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂‚úÖ".',
                                  reply_markup=ck.get_ikb_check(),
                                  parse_mode='HTML')


@dp.callback_query_handler(lambda callback: callback.data == 'check')
async def pay(callback: types.CallbackQuery):
    global sum
    global ID
    ID = str(callback.from_user.id)
    await callback.message.answer(text='<b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ!</b>\n<em>–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 12 —á–∞—Å–æ–≤</em>',
                                  parse_mode='HTML')
    await bot.send_message(chat_id=1006103801,
                           text=f'<b>–ü–û–ü–û–õ–ù–ï–ù–ò–ï</b>\n'
                                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{callback.from_user.username}\n'
                                f'ID: <code>{callback.from_user.id}</code>\n'
                                f'–°—É–º–º–∞: {sum}‚ÇΩ',
                           parse_mode='HTML')
    await bot.send_message(chat_id=6171444954,
                           text=f'<b>–ü–û–ü–û–õ–ù–ï–ù–ò–ï</b>\n'
                                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{callback.from_user.username}\n'
                                f'ID: <code>{callback.from_user.id}</code>\n'
                                f'–°—É–º–º–∞: {sum}‚ÇΩ',
                           parse_mode='HTML')


@dp.callback_query_handler(lambda callback: callback.data == 'down')
async def vivod(callback: types.CallbackQuery):
    a = sq.user_money_unlock(callback.from_user.id)
    await callback.message.answer(text=f'–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤üèõÔ∏è\n\n'
                                  f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
                                  f'‚ôªÔ∏è–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: {a}‚ÇΩ\n\n'
                                  f'<em>–í–∞–∂–Ω–æ!</em>\n'
                                  f'‚Ä¢–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ - 10‚ÇΩ.\n'
                                  f'‚Ä¢–ö–æ–º–∏—Å—Å–∏—è 5%\n'
                                  f'‚Ä¢–í—ã–≤–æ–¥—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –Ω–∞ –∫–∞—Ä—Ç—ã VISA\Mastercard\–ú–ò–†\n'
                                  f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
                                  f'<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞:</b>',
                                  parse_mode='HTML')
    await ProfileState.vivod.set()


@dp.message_handler(state=ProfileState.vivod)
async def sum_vivod(message: types.Message, state: FSMContext):
    a = int(sq.user_money_unlock(message.from_user.id))
    b = int(sq.user_money_balance(message.from_user.id))
    global sum_vivod
    try:
        if int(message.text) < 10:
            await message.answer(text='–°—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 10 —Ä—É–±–ª–µ–π.')
        elif b != 300:
            await message.answer(text=f'–î–ª—è –≤—ã–≤–æ–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–∏—Å—Ç–µ–º—ã‚ùóÔ∏è\n\n'
                                      f'<em>*—É—á–∞—Å—Ç–Ω–∏–∫–æ–º —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–≤–µ—Ä—à–∏–≤—à–∏–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—É–º–º—É (300‚ÇΩ).\n'
                                      f'–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–æ–≤–µ—Ä—à–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑!</em>\n'
                                      f'(–¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤–≤–µ–¥–∏—Ç–µ /start)',
                                 parse_mode='HTML')
        elif int(message.text) > a:
            await message.answer(text='–°—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤–∞.')
        else:
            sum_vivod = message.text
            await message.answer(text=f'<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:</b>',
                                 parse_mode='HTML')
            await ProfileState.vivod_cart.set()
    except:
        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥')
        await state.finish()


@dp.message_handler(state=ProfileState.vivod_cart)
async def vivod_cart(message: types.Message, state: FSMContext):
    global sum_vivod
    id = message.from_user.id
    a = int(sum_vivod) - (float(sum_vivod) * 0.05)
    global num_cart
    num_cart = message.text
    await message.answer(text=f'–í—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω!‚úÖ\n\n'
                              f'<em>–ë—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ:</em> {a}\n'
                              f'<em>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–ª–∞—Ç—ã 12 —á–∞—Å–æ–≤</em>',
                         parse_mode='HTML')
    await bot.send_message(chat_id=1006103801,
                           text=f'<b>–í–´–í–û–î</b>\n'
                                f'ID: <code>{id}</code>\n'
                                f'–ö–∞—Ä—Ç–∞: <code>{num_cart}</code>\n'
                                f'–°—É–º–º–∞: {sum_vivod}‚ÇΩ',
                           parse_mode='HTML')
    await bot.send_message(chat_id=6171444954,
                           text=f'<b>–í–´–í–û–î</b>\n'
                                f'ID: <code>{id}</code>\n'
                                f'–ö–∞—Ä—Ç–∞: <code>{num_cart}</code>\n'
                                f'–°—É–º–º–∞: {sum_vivod}‚ÇΩ',
                           parse_mode='HTML')
    await state.finish()


@dp.message_handler(Text(equals='üíº–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'), state='*')
async def profile(message: types.Message):
    date_start = sq.time(message.from_user.id)
    start = datetime.date(int(date_start[:4]), int(date_start[5:7]), int(date_start[8:]))
    today = datetime.date.today()
    days = str(today - start)[:2]

    balance = sq.user_money_balance(message.from_user.id)

    unlock = sq.user_money_unlock(message.from_user.id)

    profit = sq.user_money_profit(message.from_user.id)

    col_ref = sq.col_ref(message.from_user.id)

    photo = open("profile.mp4", 'rb')
    await bot.send_animation(chat_id=message.from_user.id,
                             animation=photo,
                             caption=f'üíª–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:\n\n'
                             f'üì≤–î–µ–ø–æ–∑–∏—Ç: {balance}‚ÇΩ\n'
                             f'‚ôªÔ∏è–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: {unlock}‚ÇΩ\n'
                             f'üóÑID: <code>{message.from_user.id}</code>\n\n'
                             f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n'
                             f'‚ÑπÔ∏è–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n'
                             f'‚îèüïì–î–Ω–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: {days}\n'
                             f'‚î£üìà–õ–∏—á–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: {profit}‚ÇΩ\n'
                             f'‚îóüöª–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {col_ref}\n\n'
                             f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
                             f'CHANE ENTERü™ô\n'
                             f'–õ–∏–º–∏—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π - –≤—ã–º—ã—Å–µ–ª\n'
                             f'–Ω–µ—É–¥–∞—á–Ω–∏–∫–æ–≤.',
                             reply_markup=ck.get_ikb_replenishment(),
                             parse_mode='HTML')


@dp.message_handler(Text(equals='üîó–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã'), state='*')
async def profile(message: types.Message):
    photo = open('my_ref.mp4', 'rb')
    c = sq.my_ref(message.from_user.id)
    a = ''
    n = len(c)
    if n != 0:
        for i in c:
            a += f'ID: {i} - {sq.user_money_balance(i)}‚ÇΩ\n'
    await bot.send_animation(chat_id=message.from_user.id,
                             animation=photo,
                             caption=f'üöª–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:\n\n'
                                     f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n'
                                     f'üõó–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {n}\n\n'
                                     f'{a}\n'
                                     f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
                                     f'üì≤–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: <code>{message.from_user.id}</code>',
                             reply_markup=ck.get_kb_join(),
                             parse_mode='HTML')


@dp.message_handler(Text(equals='‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —ç—Ç–∞–ø–∞—Ö'), state='*')
async def profile(message: types.Message):
    col_people = sq.users()
    photo = open('info.mp4', 'rb')
    await bot.send_animation(chat_id=message.from_user.id,
                             animation=photo,
                             caption=f'üìë–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —ç—Ç–∞–ø–∞—Ö:\n\n'
                                     f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
                                     f'üìà{col_people} –∏–∑ 150 –≤–∫–ª–∞–¥—á–∏–∫–æ–≤.\n\n'
                                     f'‚öôÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ!'
                                     f'–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è - 10 –≤–∫–ª–∞–¥—á–∏–∫–æ–≤.\n\n'
                                     f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
                                     f'–°–∏—Å—Ç–µ–º–∞ CHANE ENTER –æ–±–ª–∞–¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–µ–ø—Ä–æ–¥—É–∫—Ü–∏–∏.\n'
                                     f'–ü–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–∫–ª–∞–¥—á–∏–∫–æ–≤, –Ω–∞—Å—Ç—É–ø–∏—Ç –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–ø –∂–∏–∑–Ω–∏ —Å–∏—Å—Ç–µ–º—ã. '
                                     f'–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å—Ç–∞–Ω–µ—Ç –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ: –ª–∏–º–∏—Ç –Ω–∞ —Å—É–º–º—É –≤–ª–æ–∂–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç—ë—Ç, –≤—ã—Ä–∞—Å—Ç–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥—á–∏–∫–æ–≤.\n'
                                     f'–ö–∞–∂–¥–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –Ω–æ–≤—ã–π —ç—Ç–∞–ø —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã, –ø—Ä–æ–¥–ª–µ–≤–∞—è —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –ø—Ä–æ–µ–∫—Ç–∞.',
                             reply_markup=ck.get_ikb_about())


@dp.message_handler(Text(equals='üìë–û —Å–∏—Å—Ç–µ–º–µ'), state='*')
async def profile(message: types.Message):
    photo = open('about.mp4', 'rb')
    await bot.send_animation(chat_id=message.from_user.id,
                             animation=photo,
                             caption=f'‚öôÔ∏è–û —Å–∏—Å—Ç–µ–º–µ:\n\n'
                                     f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
                                     f'üìö–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n'
                                     f'1. –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª –≤ TELEGRAM.\n'
                                     f'2. –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –ø—Ä–∞–≤–∏–ª–∞, –æ—Å–Ω–æ–≤–Ω–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞.\n'
                                     f'3. –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —ç—Ç–∞–ø–∞—Ö —Å–∏—Å—Ç–µ–º—ã, –Ω–∞ —á—Ç–æ —ç—Ç–æ –≤–ª–∏—è–µ—Ç. \n'
                                     f'4. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞.',
                             reply_markup=ck.get_ikb_about_sistem())


@dp.callback_query_handler(lambda callback: callback.data == 'etapi')
async def etapi(callback: types.CallbackQuery):
    a = sq.users()
    b = 150 - a
    await callback.message.answer(text=f'–°–∏—Å—Ç–µ–º–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ 1 —ç—Ç–∞–ø–µ.\n\n'
                                       f'üöª–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {a}\n'
                                       f'‚ôªÔ∏è–û—Å—Ç–∞—Ç–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã: {b}',
                                  reply_markup=ck.get_ikb_etapi())


if __name__ == '__main__':
    executor.start_polling(dispatcher=dp, skip_updates=True)